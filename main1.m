function varargout = main1(varargin)
% MAIN1 MATLAB code for main1.fig
%      MAIN1, by itself, creates a new MAIN1 or raises the existing
%      singleton*.
%
%      H = MAIN1 returns the handle to a new MAIN1 or the handle to
%      the existing singleton*.
%
%      MAIN1('CALLBACK',hObject,eventData,handles,...) calls the local
%      function named CALLBACK in MAIN1.M with the given input arguments.
%
%      MAIN1('Property','Value',...) creates a new MAIN1 or raises the
%      existing singleton*.  Starting from the left, property value pairs are
%      applied to the GUI before main1_OpeningFcn gets called.  An
%      unrecognized property name or invalid value makes property application
%      stop.  All inputs are passed to main1_OpeningFcn via varargin.
%
%      *See GUI Options on GUIDE's Tools menu.  Choose "GUI allows only one
%      instance to run (singleton)".
%
% See also: GUIDE, GUIDATA, GUIHANDLES

% Edit the above text to modify the response to help main1

% Last Modified by GUIDE v2.5 07-Nov-2022 20:29:49

% Begin initialization code - DO NOT EDIT
gui_Singleton = 1;
gui_State = struct('gui_Name',       mfilename, ...
                   'gui_Singleton',  gui_Singleton, ...
                   'gui_OpeningFcn', @main1_OpeningFcn, ...
                   'gui_OutputFcn',  @main1_OutputFcn, ...
                   'gui_LayoutFcn',  [] , ...
                   'gui_Callback',   []);
if nargin && ischar(varargin{1})
    gui_State.gui_Callback = str2func(varargin{1});
end

if nargout
    [varargout{1:nargout}] = gui_mainfcn(gui_State, varargin{:});
else
    gui_mainfcn(gui_State, varargin{:});
end
% End initialization code - DO NOT EDIT


% --- Executes just before main1 is made visible.
function main1_OpeningFcn(hObject, eventdata, handles, varargin)
% This function has no output args, see OutputFcn.
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
% varargin   command line arguments to main1 (see VARARGIN)

% Choose default command line output for main1
handles.output = hObject;

% Update handles structure
guidata(hObject, handles);

% UIWAIT makes main1 wait for user response (see UIRESUME)
% uiwait(handles.figure1);


% --- Outputs from this function are returned to the command line.
function varargout = main1_OutputFcn(hObject, eventdata, handles) 
% varargout  cell array for returning output args (see VARARGOUT);
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Get default command line output from handles structure
varargout{1} = handles.output;



function edit1_Callback(hObject, eventdata, handles)
% hObject    handle to edit1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit1 as text
%        str2double(get(hObject,'String')) returns contents of edit1 as a double


% --- Executes during object creation, after setting all properties.
function edit1_CreateFcn(hObject, eventdata, handles)
% hObject    handle to edit1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


% --- Executes on button press in pushbutton1.
function pushbutton1_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton1 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
warning off;
clc;    % Clear the command window.
workspace;  % Make sure the workspace panel is showing.
format long g;
format compact;
fontSize = 10;
dum='';
set(handles.text2,'String',dum,'fontsize',20);
set(handles.text1,'String',dum,'fontsize',20);
global place;
dummy=imread('image.jpg');
axes(handles.axes1);
imshow(dummy);



dummy=imread('image.jpg');
axes(handles.axes2);
imshow(dummy);

dummy=imread('image.jpg');
axes(handles.axes3);
imshow(dummy);

dummy=imread('image.jpg');
axes(handles.axes4);
imshow(dummy);


dummy=imread('image.jpg');
axes(handles.axes6);
imshow(dummy);


pause(2);
logoimage = imread('logo.png');
axes(handles.axes1);
imshow(logoimage);

function edit2_Callback(hObject, eventdata, handles)
% hObject    handle to edit2 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Hints: get(hObject,'String') returns contents of edit2 as text
%        str2double(get(hObject,'String')) returns contents of edit2 as a double


% --- Executes during object creation, after setting all properties.
function edit2_CreateFcn(hObject, eventdata, handles)
% hObject    handle to edit2 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    empty - handles not created until after all CreateFcns called

% Hint: edit controls usually have a white background on Windows.
%       See ISPC and COMPUTER.
if ispc && isequal(get(hObject,'BackgroundColor'), get(0,'defaultUicontrolBackgroundColor'))
    set(hObject,'BackgroundColor','white');
end


% --- Executes on button press in pushbutton2.
function pushbutton2_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton2 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)


% --- Executes on button press in pushbutton3.
function pushbutton3_Callback(hObject, eventdata, handles)
% hObject    handle to pushbutton3 (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

[filename,pathname]=uigetfile({'*.xlsx'},'Pick an File');
dataset = strcat(pathname , filename);    
Data=xlsread(dataset);


m=mean(mean(Data))
D=mean(mean(abs(Data)))
E = entropy(Data)
Std = std2(Data)
disp('fearture_mean_data');disp(m);
disp('fearture_deviation_data');disp(D);
disp('fearture_Entrophy_data');disp(E);
disp('fearture_STD_deviation_data');disp(Std);m=m*-1;
ch = [m,D,E,Std];
pause(2);
axes(handles.axes2);
stem(m);
title('Feature - mean value');
pause(1);
axes(handles.axes3);
stem(D);
title('Feature - deviation value');
pause(1);
axes(handles.axes4);
stem(E);
title('Feature - Entrophy value');
pause(1);
axes(handles.axes6);
stem(Std);
title('Feature - STD_deviation value');
pause(1);
clmax=input('Enter number of hidden layer: ');
i=clmax;
if isempty(clmax)
    clmax=5;
end
nmax=input('Enter number of data per iteration: ');
if isempty(nmax)
    nmax=100;
end
depthmax=input('Enter maximum iteratation: ');
if isempty(depthmax)
    depthmax=20;
end
mmax=input('Enter number of pooling: ');
if isempty(mmax)
    mmax = 10;
end
save('config.mat','clmax','mmax','nmax','depthmax');
pause(1);
X=Data;
X1=X(1:60,1:16);
X2=X(1:60,17);
P = X1';
T = X2';
net = checkcnn(P,T);
pause(2);
pause(1);
i=input('Enter test input (1 to 60): ');





Y = sim(net,P(:,i))






pause(1);
if(round(Y)==1);
    disp('Malware predictited');
    T='Malware predictited';
    set(handles.text2,'String',T,'fontsize',20);
else
    disp('Malware not predictited');
    T='Malware not predictited';
    set(handles.text2,'String',T,'fontsize',20);
end  



pause(1);
axes(handles.axes4);
pie(ch);

pause(1);
axes(handles.axes6);
bar(ch)




%figure();
%plot(Data(1),'b');
%hold on;
%plot(P(:,i),'r');
riskfactor=mean(P(:,i))*-0.75;
disp('RISK FACTOR: ');disp(riskfactor);
set(handles.text1,'String',riskfactor,'fontsize',20);